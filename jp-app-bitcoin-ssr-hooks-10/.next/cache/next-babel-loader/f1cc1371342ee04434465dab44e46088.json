{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/fernando.miras/Documents/ReactUDEMY/jp-app-bitcoin-ssr-hooks-10/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MasterPage from '../components/MasterPage'; // COMPONENTES\n\nimport Precio from '../components/Precio';\nimport Noticias from '../components/Noticias'; // llamando al fetch mediante ssr\n\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(MasterPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Precio del bitcoin\"), __jsx(Precio, {\n    precio: props.precioBitcoin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"my-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Noticias sobre Bitcoin\"), __jsx(Noticias, {\n    noticias: props.noticias,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))));\n}; // getInitialProps; es como el ComponentDidMunt pero con SSR. Aca de donde se hace el llamado a las API\n// a los valores lo guarda como props. Para acceder a los props se tiene q especificar en el Index = (props), para poder acceder a las prosp\n\n\nIndex.getInitialProps = function _callee() {\n  var precio, noticias, resPrecio, resNoticias;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.coinmarketcap.com/v2/ticker/1/'));\n\n        case 2:\n          precio = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch('https://newsapi.org/v2/everything?q=bitcoin&sortBy=publishedAt&apiKey=6c1c1dfcb4a943c7bf481bc628b80153&language=es'));\n\n        case 5:\n          noticias = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(precio.json());\n\n        case 8:\n          resPrecio = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(noticias.json());\n\n        case 11:\n          resNoticias = _context.sent;\n          return _context.abrupt(\"return\", {\n            precioBitcoin: resPrecio.data.quotes.USD,\n            noticias: resNoticias.articles\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/fernando.miras/Documents/ReactUDEMY/jp-app-bitcoin-ssr-hooks-10/pages/index.js"],"names":["MasterPage","Precio","Noticias","fetch","Index","props","precioBitcoin","noticias","getInitialProps","precio","json","resPrecio","resNoticias","data","quotes","USD","articles"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACT,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,MAAC,MAAD;AACI,IAAA,MAAM,EAAEA,KAAK,CAACC,aADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,MAAC,QAAD;AACI,IAAA,QAAQ,EAAED,KAAK,CAACE,QADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,CADH,CADS;AAAA,CAAd,C,CAmBA;AACA;;;AACAH,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCL,KAAK,CAAC,4CAAD,CADN;;AAAA;AACdM,UAAAA,MADc;AAAA;AAAA,2CAEGN,KAAK,CAAC,oHAAD,CAFR;;AAAA;AAEdI,UAAAA,QAFc;AAAA;AAAA,2CAIIE,MAAM,CAACC,IAAP,EAJJ;;AAAA;AAIdC,UAAAA,SAJc;AAAA;AAAA,2CAKMJ,QAAQ,CAACG,IAAT,EALN;;AAAA;AAKdE,UAAAA,WALc;AAAA,2CAOb;AACHN,YAAAA,aAAa,EAAEK,SAAS,CAACE,IAAV,CAAeC,MAAf,CAAsBC,GADlC;AAEHR,YAAAA,QAAQ,EAAGK,WAAW,CAACI;AAFpB,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAeZ,KAAf","sourcesContent":["import MasterPage from '../components/MasterPage';\n// COMPONENTES\nimport Precio from '../components/Precio';\nimport Noticias from '../components/Noticias';\n// llamando al fetch mediante ssr\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = (props) => (\n     <MasterPage>\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <h2>Precio del bitcoin</h2>\n                <Precio\n                    precio={props.precioBitcoin}\n                />\n            </div>\n            <div className=\"col-md-12\">\n                <h2 className=\"my-4\">Noticias sobre Bitcoin</h2>\n                <Noticias\n                    noticias={props.noticias}\n                />   \n            </div>\n        </div>\n     </MasterPage>\n);\n\n// getInitialProps; es como el ComponentDidMunt pero con SSR. Aca de donde se hace el llamado a las API\n// a los valores lo guarda como props. Para acceder a los props se tiene q especificar en el Index = (props), para poder acceder a las prosp\nIndex.getInitialProps = async () => {\n    const precio = await fetch('https://api.coinmarketcap.com/v2/ticker/1/');\n    const noticias = await fetch('https://newsapi.org/v2/everything?q=bitcoin&sortBy=publishedAt&apiKey=6c1c1dfcb4a943c7bf481bc628b80153&language=es');\n\n    const resPrecio = await precio.json();\n    const resNoticias = await noticias.json();\n\n    return {\n        precioBitcoin: resPrecio.data.quotes.USD, \n        noticias : resNoticias.articles\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}